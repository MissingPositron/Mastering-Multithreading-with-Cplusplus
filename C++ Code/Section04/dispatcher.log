==12900== Memcheck, a memory error detector
==12900== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==12900== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==12900== Command: ./dispatcher_demo
==12900== Parent PID: 9249
==12900== 
==12900== 
==12900== HEAP SUMMARY:
==12900==     in use at exit: 75,184 bytes in 71 blocks
==12900==   total heap usage: 260 allocs, 189 frees, 88,678 bytes allocated
==12900== 
==12900== 80 bytes in 10 blocks are definitely lost in loss record 1 of 5
==12900==    at 0x4C2E0EF: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==12900==    by 0x402EFD: Dispatcher::init(int) (dispatcher.cpp:22)
==12900==    by 0x40930A: main (main.cpp:32)
==12900== 
==12900== 960 bytes in 40 blocks are definitely lost in loss record 3 of 5
==12900==    at 0x4C2E0EF: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==12900==    by 0x409342: main (main.cpp:37)
==12900== 
==12900== 1,440 (1,200 direct, 240 indirect) bytes in 10 blocks are definitely lost in loss record 4 of 5
==12900==    at 0x4C2E0EF: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==12900==    by 0x402EBB: Dispatcher::init(int) (dispatcher.cpp:20)
==12900==    by 0x40930A: main (main.cpp:32)
==12900== 
==12900== LEAK SUMMARY:
==12900==    definitely lost: 2,240 bytes in 60 blocks
==12900==    indirectly lost: 240 bytes in 10 blocks
==12900==      possibly lost: 0 bytes in 0 blocks
==12900==    still reachable: 72,704 bytes in 1 blocks
==12900==         suppressed: 0 bytes in 0 blocks
==12900== Reachable blocks (those to which a pointer was found) are not shown.
==12900== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==12900== 
==12900== For counts of detected and suppressed errors, rerun with: -v
==12900== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 0 from 0)
